{"version":3,"sources":["reportWebVitals.js","components/Header.jsx","actions/action-types.js","dispatcher/dispatcher.js","stores/hero-store.js","actions/hero-actions.js","components/HeroesList.jsx","components/Detail.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hero","Header","useState","isLogged","to","actionTypes","LOAD_HEROES","LOAD_HERO","DELETE_HERO","ADD_HERO","UPDATE_HERO","dispatcher","Dispatcher","CHANGE","heroes","heroStore","callback","this","on","removeListener","emit","EventEmitter","register","action","type","payload","emitChange","a","fetch","response","json","dispatch","HeroesList","getHeroes","setHeroes","handleChange","useEffect","addEventListener","length","loadHeroes","removeEventListener","map","id","name","Detail","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":"iMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCJRQ,EACD,GA4BUC,MAzBf,WAAmB,IAAD,EACEC,oBAAS,GAArBC,EADU,oBAWjB,OACC,qCACC,gDACA,gCACC,cAAC,IAAD,CAAMC,GAAG,UAAT,kBACC,MACD,cAAC,IAAD,CAAMA,GAAE,kBAAaJ,GAArB,2BACC,MAdIG,EACN,cAAC,IAAD,CAAMC,GAAG,WAAT,sBAEA,cAAC,IAAD,CAAMA,GAAG,UAAT,4B,gCCNYC,EARK,CACnBC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,SAAU,WACVC,YAAa,eCDCC,EAFI,I,MAAIC,Y,QCEjBC,EAAS,SACXC,EAAS,GAoBPC,EAAY,IAlBlB,0KAEE,OAAOD,IAFT,uCAKkBE,GAChBC,KAAKC,GAAGL,EAAQG,KANlB,0CASqBA,GACnBC,KAAKE,eAAeN,EAAQG,KAV9B,mCAcEC,KAAKG,KAAKP,OAdZ,GAA+BQ,iBAoB/BV,EAAWW,UAAS,SAACC,GACpB,OAAQA,EAAOC,MACd,KAAKnB,EAAYC,YAChBQ,EAASS,EAAOE,QAChBV,EAAUW,iBAQEX,Q,qECpCR,8BAAAY,EAAA,sEACiBC,MAAM,oBADvB,cACAC,EADA,gBAEeA,EAASC,OAFxB,OAEAhB,EAFA,OAINH,EAAWoB,SAAS,CACnBP,KAAMnB,EAAYC,YAClBmB,QAASX,IANJ,4C,sBCoCQkB,MAlCf,WAAuB,IAAD,EACO9B,mBAASa,EAAUkB,aAD1B,mBACdnB,EADc,KACNoB,EADM,KAGrB,SAASC,IACRD,EAAUnB,EAAUkB,aAerB,OAZAG,qBAAU,WAOT,OANArB,EAAUsB,iBAAiBF,GAEtBrB,GAAWA,EAAOwB,QDZlB,WAAP,wBCaGC,GAGM,WACNxB,EAAUyB,oBAAoBL,MAE7B,CAACrB,IAGH,qCACC,+CACGA,IAAWA,EAAOwB,SAAW,sDAC/BxB,GACAA,EAAOwB,OAAS,GAChBxB,EAAO2B,KAAI,SAACzC,GAAD,OACV,6BACC,cAAC,IAAD,CAAMI,GAAE,kBAAaJ,EAAK0C,IAA1B,SAAiC1C,EAAK2C,QAD9B3C,EAAK0C,WCzBJE,MAJf,WACC,OAAO,gDCORC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,eAAC,IAAD,WACC,cAAC,EAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWlB,IACvC,cAAC,IAAD,CAAOgB,KAAK,kBAAkBC,OAAK,EAACC,UAAWN,YAIlDO,SAASC,eAAe,SAMzB7D,M","file":"static/js/main.7dad05b0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst hero = {\n\tid: 12\n};\n\nfunction Header() {\n\tconst [isLogged] = useState(false);\n\n\tfunction isSignInVisible() {\n\t\treturn isLogged ? (\n\t\t\t<Link to=\"/signout\">Sign Out</Link>\n\t\t) : (\n\t\t\t<Link to=\"/signin\">Sign In</Link>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Tour of Heroes</h1>\n\t\t\t<nav>\n\t\t\t\t<Link to=\"/heroes\">List</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link to={`/heroes/${hero.id}`}>Narco Details</Link>\n\t\t\t\t{' | '}\n\t\t\t\t{isSignInVisible()}\n\t\t\t</nav>\n\t\t</>\n\t);\n}\n\nexport default Header;\n","const actionTypes = {\n\tLOAD_HEROES: 'LOAD_HEROES',\n\tLOAD_HERO: 'LOAD_HERO',\n\tDELETE_HERO: 'DELETE_HERO',\n\tADD_HERO: 'ADD_HERO',\n\tUPDATE_HERO: 'UPDATE_HERO'\n};\n\nexport default actionTypes;\n","import { Dispatcher } from 'flux';\n\nconst dispatcher = new Dispatcher();\n\nexport default dispatcher;\n","import actionTypes from '../actions/action-types';\nimport dispatcher from '../dispatcher/dispatcher';\nimport { EventEmitter } from 'events';\n\nconst CHANGE = 'CHANGE';\nlet heroes = [];\n\nexport class HeroStore extends EventEmitter {\n\tgetHeroes() {\n\t\treturn heroes;\n\t}\n\n\taddEventListener(callback) {\n\t\tthis.on(CHANGE, callback);\n\t}\n\n\tremoveEventListener(callback) {\n\t\tthis.removeListener(CHANGE, callback);\n\t}\n\n\temitChange() {\n\t\tthis.emit(CHANGE);\n\t}\n}\n\nconst heroStore = new HeroStore();\n\ndispatcher.register((action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.LOAD_HEROES:\n\t\t\theroes = action.payload;\n\t\t\theroStore.emitChange();\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n});\n\nexport default heroStore;\n","import actionTypes from './action-types';\nimport dispatcher from '../dispatcher/dispatcher';\n\nexport async function loadHeroes() {\n\tconst response = await fetch('/api/heroes.json');\n\tconst heroes = await response.json();\n\n\tdispatcher.dispatch({\n\t\ttype: actionTypes.LOAD_HEROES,\n\t\tpayload: heroes\n\t});\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport heroStore from '../stores/hero-store';\nimport { loadHeroes } from '../actions/hero-actions';\n\nfunction HeroesList() {\n\tconst [heroes, setHeroes] = useState(heroStore.getHeroes());\n\n\tfunction handleChange() {\n\t\tsetHeroes(heroStore.getHeroes());\n\t}\n\n\tuseEffect(() => {\n\t\theroStore.addEventListener(handleChange);\n\n\t\tif (!heroes || !heroes.length) {\n\t\t\tloadHeroes();\n\t\t}\n\n\t\treturn () => {\n\t\t\theroStore.removeEventListener(handleChange);\n\t\t};\n\t}, [heroes]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Heroes List</h2>\n\t\t\t{(!heroes || !heroes.length) && <h1>There are no heroes!</h1>}\n\t\t\t{heroes &&\n\t\t\t\theroes.length > 0 &&\n\t\t\t\theroes.map((hero) => (\n\t\t\t\t\t<li key={hero.id}>\n\t\t\t\t\t\t<Link to={`/heroes/${hero.id}`}>{hero.name}</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default HeroesList;\n","import React from 'react';\n\nfunction Detail() {\n\treturn <h2>Narco Details</h2>;\n}\n\nexport default Detail;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Header from './components/Header';\nimport HeroesList from './components/HeroesList';\nimport Detail from './components/Detail';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/heroes\" exact component={HeroesList} />\n\t\t\t\t<Route path=\"/heroes/:heroId\" exact component={Detail} />\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}