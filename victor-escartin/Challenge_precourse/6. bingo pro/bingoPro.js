/*Realiza un programa que simule un Bingo. Cuando se ejecute, pedir√° el nombre del jugador y deber√° guardarse. Durante el primer turno se mostrar√° un cart√≥n con 15 n√∫meros (excluyendo el 0 siempre).

Para pasar al siguiente turno el usuario deber√° confirmar mediante confirm() visualiz√°ndose otro n√∫mero. Si coincide con alguno de los existentes en el cart√≥n, cambiar√° por una "X" o un 0.

El cart√≥n se mostrar√° al final de cada turno, con los cambios efectuados, indicando al usuario qu√© n√∫mero se ha encontrado. El programa deber√° preguntar al usuario al inicio de cada turno si desea continuar, en caso de que se contin√∫e, seguir√° el mismo patr√≥n que hasta el momento.

Por supuesto, cuando todos los n√∫meros de una misma l√≠nea sean "X", mostrar√° un mensaje "L√çNEA!", pero la ejecuci√≥n seguir√°, el juego solo acabar√° cuando todos los n√∫meros est√©n a "X" (solamente se puede cantar l√≠nea 1 vez).

Cuando el juego concluya, deber√° decirle al usuario en cuantos turnos se ha completado el cart√≥n.

Por √∫ltimo, deber√° preguntar si desea volver a jugar. Comenzar por una versi√≥n muy peque√±a y b√°sica nos har√° tener un programa de principio a fin, es decir, que empieza, que acaba y haga lo que queramos a muy peque√±a escala, una vez lo tengamos todo bien dividido podremos empezar a extenderlo tanto como queramos.

Si funciona con 5 n√∫meros deber√° funcionar con 15, no? üòÅ

Versi√≥n m√≠nima:
Cart√≥n con solo 5 n√∫meros, sin necesidad de ser generados random. Solo necesitamos un n√∫mero random cuando recorramos el cart√≥n y veamos si hay alguna coincidencia. No necesitamos asegurarnos que el n√∫mero random de cada turno no haya salido en turnos anteriores, recuerda que estamos en la m√≠nima versi√≥n posible, eso ya lo solucionaremos. Si hay coincidencia, vamos a reemplazar el n√∫mero por una 'X' y mostramos el cart√≥n modificado Separarlo todo en funciones, englobado en una funci√≥n global llamada bingo(), tal que: function()=> Generar Numero Random Bombo function()=> Nuevo turno (Match carton[i] === randomNum) function() => Preguntar Nuevo Turno


Pro
‚óè Cuando se muestre la carta, se preguntar√° al usuario si realmente quiere ese cart√≥n o generar otro, si realmente quiere ese cart√≥n, deber√° responder "Yes" para proceder.

‚óè Establece un sistema de puntos, en cuantos m√°s turnos se complete el cart√≥n, menos puntos (el sistema de puntos int√©gralo como quieras), por el contrario, a menos turnos, m√°s puntos.

‚óè Antes de empezar el juego, muestra el sistema de puntos al usuario.

‚óè Ranking de usuarios (ordenado por puntos)
*/

var result = 0;
var showCard;
var score;
var finalRanking = [];
var line = [];
var card = [];

//Funci√≥n perfil usuario
function user() {
	var player = { name: String, score: Number };
	var name = prompt('Por favor, introduce tu nombre:');
	name = name.toString();
	if (name == null || name === '') {
		alert('Debes introducir un nombre de JUGADOR para iniciar el BINGO');
		user();
	} else {
		alert('¬°Bienvenido ' + name + ', iniciamos el juego!');
		createCard();
		console.log('Tu resultado ha sido: ' + result + ' intentos');
		points();
		player.name = name;
		player.score = score;
		finalRanking.push(player);
		//console.log(finalRanking);
	}

	menu();
}

//Funci√≥n men√∫ opciones usuario
function menu() {
	let option = prompt('Indica si quieres JUGAR, ver RESULTADOS o SALIR');

	if (option === null) {
		return;
	} else {
		option = option.toString();
		option = option.toLowerCase();
		switch (option) {
			case 'jugar':
				user();
				break;
			case 'resultados':
				ranking();
				break;
			case 'salir':
				break;
			default:
				alert('Por favor, vuelva a indicar tu elecci√≥n');
				menu();
		}
	}
}

//Funci√≥n crear tarjeta
function createCard() {
	card = [];

	for (let i = 0; i < 15; i++) {
		let randNum = Math.ceil(Math.random() * 10);
		card.push(randNum);
	}

	console.log('%cEsta es tu tarjeta de juego:', 'color: blue');

	showCard = card.join();
	console.log(
		showCard[0],
		showCard[1],
		showCard[2],
		showCard[3],
		showCard[4],
		'\n',
		showCard[5],
		showCard[6],
		showCard[7],
		showCard[8],
		showCard[9],
		'\n',
		showCard[10],
		showCard[11],
		showCard[12],
		showCard[13],
		showCard[14]
	);
	console.log('%c¬°Mucha Suerte!', 'color: blue');
	bingo(card);
	return result;
}

//Funci√≥n tachar n√∫meros de la tarjeta
function bingo(userCard) {
	if (confirm('¬øSacamos un n√∫mero nuevo?')) {
		result += 1;
		number = Math.ceil(Math.random() * 10);
		console.log('El n√∫mero es el ' + number);
	} else {
		return;
	}

	if (userCard.includes(number)) {
		userCard[userCard.indexOf(number)] = 'X';
		showCard = userCard.join();
		console.log(showCard);

		while (
			userCard[0] != 'X' ||
			userCard[1] != 'X' ||
			userCard[2] != 'X' ||
			userCard[3] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X' ||
			userCard[4] != 'X'
		) {
			if (
				(userCard[0] == 'X' &&
					userCard[1] == 'X' &&
					userCard[2] == 'X' &&
					userCard[3] == 'X' &&
					userCard[4] == 'X') ||
				(userCard[5] == 'X' &&
					userCard[6] == 'X' &&
					userCard[7] == 'X' &&
					userCard[8] == 'X' &&
					userCard[9] == 'X') ||
				(userCard[10] == 'X' &&
					userCard[11] == 'X' &&
					userCard[12] == 'X' &&
					userCard[13] == 'X' &&
					userCard[14] == 'X')
			) {
				console.log('¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°LINEA!!!!!!!!!!!!!!!!!!!!');
				console.log(showCard);
				bingo(userCard);
			} else {
				bingo(userCard);
			}
		}

		console.log('¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°¬°BINGO!!!!!!!!!!!!!!!!!!!!');
		console.log('%cHas completado la tarjeta, ¬°ENHORABUENA!', 'color:blue');
	} else {
		console.log(showCard);
		bingo(card);
	}

	return result;
}

//Funci√≥n solicitar cambio tarjeta
function otherCard() {
	let newCard = prompt('¬øQuieres cambiar tu cart√≥n?');
	if (newCard === null) {
		return;
	} else {
		newCard = newCard.toString();
		newCard = newCard.toLowerCase();
		switch (newCard) {
			case 'si':
				createCard();
				break;
			case 'no':
				bingo(card);
				break;
			default:
				alert('Por favor, responde SI o NO');
				otherCard();
		}
	}
}

//Funci√≥n calcular resultados
function points() {
	if (result < 40) {
		score = 100;
	} else if (result < 60) {
		score = 50;
	} else if (result < 80) {
		score = 20;
	} else {
		score = 10;
	}
	return console.log('La puntuaci√≥n obtenida es ' + score + ' puntos');
}

//Funci√≥n mostrar resultados y clasificaci√≥n jugadores ordenada por puntuaci√≥n de mayor a menor
function ranking() {
	console.log(
		'PUNTUACIONES:\n\n -Menos de 40 intentos= 100 puntos\n -Menos de 600 intentos= 50 puntos\n -Menos de 80 intentos= 20 puntos\n -80 intentos o m√°s= 10 punto'
	);

	finalRanking.sort(function (a, b) {
		if (a.score > b.score) {
			return -1;
		}
		if (a.score < b.score) {
			return 1;
		}
		return 0;
	});

	console.log('%cEste es el ranking de resultados: ', 'color: blue');

	for (let z = 0; z < finalRanking.length; z++) {
		console.log(
			finalRanking[z].name + ': ' + finalRanking[z].score + ' puntos'
		);
	}

	menu();
}

user();
